Metadata-Version: 1.1
Name: algorepo
Version: 0.1
Summary: Python implementation of important algorithms and data-structures
Home-page: UNKNOWN
Author: Ajjai
Author-email: ajjai@tenmiles.com
License: MIT
Description: ===========================================================================
        algorepo: Python implementation of important algorithms and data-structures
        ===========================================================================
        
        Implemented Algorithms
        ----------------------
        Sorting Algorithms::
        
            >> Insertion sort
            >> Bubble sort
            >> Selection sort
            >> Heap sort
            >> Merge sort
            >> Median sort
            >> Quick sort
            >> Counting sort
            >> Radix sort
        
        Miscellaneous::
        
            >> Fibonacci (Naive)
            >> Fibonacci (Memoized)
        
        Data-Structures::
        
            >> Heap
            >> Trie
            >> Binary Search Tree
        
        Installation
        ------------
        
        There is nothing to install. Just use ``git`` to clone the repository with::
        
            $ git clone https://github.com/ajjaic/algorepo.git
        
        and review the implemented algorithms.
        
        Usage
        -----
        
        The best way to use this repository is to::
        
            >> Pick the algorithm you are trying to learn
            >> Find the implementation in this repository
            >> Go through the implementation line by line and try to understand it
            >> Then try to implement it yourself.
        
        Remember, that the implementations in this repository is just one possible implementation of
        the respective algorithms. There are different ways of implementing the same algorithm.
        
        Contribution
        ------------
        
        If you would like to contribute, here are a couple of ways you can::
        
            >> Add new algorithms for performing different kinds of tasks
            >> Modify existing algorithms if there is a better way to do it
            >> Fill in the runtimes for those algorithms that do not have it filled in already
            >> Add better comments so as to document what the algorithm is doing
        
Keywords: algorithm data-structure
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Programming Language :: Python
